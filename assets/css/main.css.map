{"version":3,"sources":["bootstrap/mixins/_banner.scss","base/_base.scss","mixins/_mixin.scss","base/_abstract.scss","base/_font.scss","base/_tynography.scss","pages/_sign-in.scss","bootstrap/vendor/_rfs.scss","pages/_sign-up.scss","pages/_forgot-password.scss"],"names":[],"mappings":"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","file":"main.css","sourcesContent":["@mixin bsBanner($file) {\r\n  /*!\r\n   * Bootstrap #{$file} v5.2.2 (https://getbootstrap.com/)\r\n   * Copyright 2011-2022 The Bootstrap Authors\r\n   * Copyright 2011-2022 Twitter, Inc.\r\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\r\n   */\r\n}\r\n\r\n","body {\r\n    height: 100%;\r\n}\r\n\r\n.container {\r\n    max-width: 1344px;\r\n}\r\n\r\n.btn {\r\n    @include button();\r\n}\r\n\r\n.eye {\r\n    \r\n}\r\n\r\n.circle {\r\n    position: relative;\r\n    background: transparent;\r\n    border: 2px solid $slate-gray;\r\n    border-radius: 50%;\r\n    width: 24px;\r\n    height: 24px;\r\n    margin-right: 20px;\r\n\r\n    .checkmark {\r\n        position: absolute;\r\n        transform: rotate(45deg) translate(-50%, -50%);\r\n        left: 6px;\r\n        top: 9px;\r\n        height: 11px;\r\n        width: 7px;\r\n        border-bottom: 3px solid $slate-gray;\r\n        border-right: 3px solid $slate-gray;\r\n        visibility: hidden;\r\n    }\r\n}","@mixin button {\r\n    font-family: \"Mona Sans\";\r\n    border-radius: 4px;\r\n    background-color: $eigengrau;\r\n    border-color: $eigengrau;\r\n    width: 100%;\r\n}\r\n\r\n@mixin input {\r\n    border-radius: 4px;\r\n    border: 1px solid $cool-gray;\r\n    width: 100%;\r\n}\r\n\r\n@mixin tab {\r\n    border-radius: 200px;\r\n    height: 41px;\r\n    background-color: $white-smoke;\r\n    width: 100%;\r\n}   ","//main font\r\n$font: 'Mona Sans';\r\n\r\n//custom color\r\n$eigengrau: #1C212D;\r\n$eerie-black: #1E1E1E;\r\n$slate-gray: #717584;\r\n$white-smoke: #F4F4F4;\r\n$cool-gray: #989FB9;\r\n$white: #FFFFFF;\r\n$green: #1A9669;\r\n$persian-blue: #143FCD;\r\n$mango-tango:#E77D30;\r\n$misty-rose:#FFE4E4;\r\n$ruddy:#F42929;\r\n$honeydew:#E5FBE7;\r\n$black:#000000;\r\n\r\n","@font-face {\r\n  font-family: 'Mona Sans';\r\n  src:\r\n    url('/assets/font/mona-sans/Mona-Sans.woff2') format('woff2 supports variations'),\r\n    url('/assets/font/mona-sans/Mona-Sans.woff2') format('woff2-variations');\r\n  font-style: normal;\r\n  font-display: swap;\r\n}","h1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6\r\n.h1,\r\n.h2,\r\n.h3,\r\n.h4,\r\n.h5,\r\n.h6 {\r\n    font-family: \"Mona Sans\";\r\n    font-weight: 600;\r\n}\r\n\r\nbody {\r\n    font-family: \"Mona Sans\";\r\n    font-size: 1rem;\r\n    scroll-behavior: smooth;\r\n}",".sign-in {\r\n    padding-top: 100px;\r\n    padding-bottom: 100px;\r\n\r\n    .section__content {\r\n        .sign-in__left {\r\n            max-width: 628px;\r\n            width: 100%;\r\n            margin-right: 156px;\r\n            \r\n            .sign-in__image {}\r\n\r\n            .sign-in__info {\r\n                padding-top: 64px;\r\n                max-width: 507px;\r\n                width: 100%;\r\n                margin: auto;\r\n\r\n                .section__title {\r\n                    margin-bottom: 20px;\r\n                }\r\n\r\n                .section__subtitle {\r\n                    color: $eigengrau;\r\n                    font-weight: 400;\r\n                    max-width: 389px;\r\n                    width: 100%;\r\n                }\r\n            }\r\n        }\r\n\r\n        .sign-in__right {\r\n            max-width: 432px;\r\n            width: 100%;\r\n            padding-top: 80px;\r\n\r\n            .sign-in__logo {\r\n                margin-bottom: 32px;\r\n            }\r\n\r\n            .section__title {\r\n                @include font-size(40px);\r\n                margin-bottom: 16px;\r\n            }\r\n\r\n            .section__subtitle {\r\n                @include font-size(18px);\r\n                margin-bottom: 32px;\r\n                color: $slate-gray;\r\n            }\r\n\r\n            .sign-in__google {\r\n                &__btn {\r\n                    @include input();\r\n                    max-width: 432px;\r\n                    padding: 12px 16px;\r\n                    margin-bottom: 32px;\r\n                    display: block;\r\n                    color: $eigengrau;\r\n                    text-decoration: none;\r\n                    font-weight: 600;\r\n\r\n                    img {\r\n                        margin-right: 16px;\r\n                    }\r\n                }\r\n\r\n                &__desc {\r\n                    max-width: 360px;\r\n                    width: 100%;\r\n                    color: $cool-gray;\r\n                    font-weight: 500;\r\n                    border-bottom: 1px solid $cool-gray;\r\n                    line-height: 0.1em;\r\n                    margin: auto;\r\n\r\n                    span {\r\n                        background: #fff;\r\n                        padding: 0 10px;\r\n                    }\r\n                }\r\n            }\r\n\r\n            .gform_body {\r\n                padding-top: 32px;\r\n\r\n                .gfield {\r\n                    .gform_label {\r\n                        @include font-size(14px);\r\n                        font-weight: 600;\r\n                    }\r\n\r\n                    &_input {\r\n                        outline: none;\r\n                        margin-bottom: 16px;\r\n\r\n                        .input {\r\n                            @include input();\r\n                            padding: 16px 16px;\r\n                            max-width: 432px;\r\n                            color: $eigengrau;\r\n                            font-weight: 500;\r\n                        }\r\n\r\n                        .input:focus {\r\n                            outline: 1px solid $persian-blue;\r\n                        }\r\n\r\n                        ::placeholder {\r\n                            color: $cool-gray;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            .gform_bottom {\r\n                &_forgot-password {\r\n                    text-align: right;\r\n                    margin-bottom: 32px;\r\n\r\n                    a {\r\n                        color: $eigengrau;\r\n                        font-weight: 600;\r\n                    }\r\n                }\r\n\r\n                &_submit {\r\n                    margin-bottom: 32px;\r\n\r\n                    .submit_button {\r\n                        @include button();\r\n                        max-width: 661px;\r\n                        padding: 16px;\r\n                        color: $white;\r\n                    }\r\n                }\r\n\r\n                &_register {\r\n                    text-align: center;\r\n                    color: $eigengrau;\r\n                    font-weight: 600;\r\n                    a {\r\n                        color: $eigengrau;\r\n                        font-weight: 600;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","// stylelint-disable property-blacklist, scss/dollar-variable-default\r\n\r\n// SCSS RFS mixin\r\n//\r\n// Automated responsive values for font sizes, paddings, margins and much more\r\n//\r\n// Licensed under MIT (https://github.com/twbs/rfs/blob/main/LICENSE)\r\n\r\n// Configuration\r\n\r\n// Base value\r\n$rfs-base-value: 1.25rem !default;\r\n$rfs-unit: rem !default;\r\n\r\n@if $rfs-unit != rem and $rfs-unit != px {\r\n  @error \"`#{$rfs-unit}` is not a valid unit for $rfs-unit. Use `px` or `rem`.\";\r\n}\r\n\r\n// Breakpoint at where values start decreasing if screen width is smaller\r\n$rfs-breakpoint: 1200px !default;\r\n$rfs-breakpoint-unit: px !default;\r\n\r\n@if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {\r\n  @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\r\n}\r\n\r\n// Resize values based on screen height and width\r\n$rfs-two-dimensional: false !default;\r\n\r\n// Factor of decrease\r\n$rfs-factor: 10 !default;\r\n\r\n@if type-of($rfs-factor) != number or $rfs-factor <= 1 {\r\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\r\n}\r\n\r\n// Mode. Possibilities: \"min-media-query\", \"max-media-query\"\r\n$rfs-mode: min-media-query !default;\r\n\r\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\r\n$rfs-class: false !default;\r\n\r\n// 1 rem = $rfs-rem-value px\r\n$rfs-rem-value: 16 !default;\r\n\r\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\r\n$rfs-safari-iframe-resize-bug-fix: false !default;\r\n\r\n// Disable RFS by setting $enable-rfs to false\r\n$enable-rfs: true !default;\r\n\r\n// Cache $rfs-base-value unit\r\n$rfs-base-value-unit: unit($rfs-base-value);\r\n\r\n@function divide($dividend, $divisor, $precision: 10) {\r\n  $sign: if($dividend > 0 and $divisor > 0 or $dividend < 0 and $divisor < 0, 1, -1);\r\n  $dividend: abs($dividend);\r\n  $divisor: abs($divisor);\r\n  @if $dividend == 0 {\r\n    @return 0;\r\n  }\r\n  @if $divisor == 0 {\r\n    @error \"Cannot divide by 0\";\r\n  }\r\n  $remainder: $dividend;\r\n  $result: 0;\r\n  $factor: 10;\r\n  @while ($remainder > 0 and $precision >= 0) {\r\n    $quotient: 0;\r\n    @while ($remainder >= $divisor) {\r\n      $remainder: $remainder - $divisor;\r\n      $quotient: $quotient + 1;\r\n    }\r\n    $result: $result * 10 + $quotient;\r\n    $factor: $factor * .1;\r\n    $remainder: $remainder * 10;\r\n    $precision: $precision - 1;\r\n    @if ($precision < 0 and $remainder >= $divisor * 5) {\r\n      $result: $result + 1;\r\n    }\r\n  }\r\n  $result: $result * $factor * $sign;\r\n  $dividend-unit: unit($dividend);\r\n  $divisor-unit: unit($divisor);\r\n  $unit-map: (\r\n    \"px\": 1px,\r\n    \"rem\": 1rem,\r\n    \"em\": 1em,\r\n    \"%\": 1%\r\n  );\r\n  @if ($dividend-unit != $divisor-unit and map-has-key($unit-map, $dividend-unit)) {\r\n    $result: $result * map-get($unit-map, $dividend-unit);\r\n  }\r\n  @return $result;\r\n}\r\n\r\n// Remove px-unit from $rfs-base-value for calculations\r\n@if $rfs-base-value-unit == px {\r\n  $rfs-base-value: divide($rfs-base-value, $rfs-base-value * 0 + 1);\r\n}\r\n@else if $rfs-base-value-unit == rem {\r\n  $rfs-base-value: divide($rfs-base-value, divide($rfs-base-value * 0 + 1, $rfs-rem-value));\r\n}\r\n\r\n// Cache $rfs-breakpoint unit to prevent multiple calls\r\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\r\n\r\n// Remove unit from $rfs-breakpoint for calculations\r\n@if $rfs-breakpoint-unit-cache == px {\r\n  $rfs-breakpoint: divide($rfs-breakpoint, $rfs-breakpoint * 0 + 1);\r\n}\r\n@else if $rfs-breakpoint-unit-cache == rem or $rfs-breakpoint-unit-cache == \"em\" {\r\n  $rfs-breakpoint: divide($rfs-breakpoint, divide($rfs-breakpoint * 0 + 1, $rfs-rem-value));\r\n}\r\n\r\n// Calculate the media query value\r\n$rfs-mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{divide($rfs-breakpoint, $rfs-rem-value)}#{$rfs-breakpoint-unit});\r\n$rfs-mq-property-width: if($rfs-mode == max-media-query, max-width, min-width);\r\n$rfs-mq-property-height: if($rfs-mode == max-media-query, max-height, min-height);\r\n\r\n// Internal mixin used to determine which media query needs to be used\r\n@mixin _rfs-media-query {\r\n  @if $rfs-two-dimensional {\r\n    @if $rfs-mode == max-media-query {\r\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}), (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\r\n        @content;\r\n      }\r\n    }\r\n    @else {\r\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) and (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n  @else {\r\n    @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n// Internal mixin that adds disable classes to the selector if needed.\r\n@mixin _rfs-rule {\r\n  @if $rfs-class == disable and $rfs-mode == max-media-query {\r\n    // Adding an extra class increases specificity, which prevents the media query to override the property\r\n    &,\r\n    .disable-rfs &,\r\n    &.disable-rfs {\r\n      @content;\r\n    }\r\n  }\r\n  @else if $rfs-class == enable and $rfs-mode == min-media-query {\r\n    .enable-rfs &,\r\n    &.enable-rfs {\r\n      @content;\r\n    }\r\n  }\r\n  @else {\r\n    @content;\r\n  }\r\n}\r\n\r\n// Internal mixin that adds enable classes to the selector if needed.\r\n@mixin _rfs-media-query-rule {\r\n\r\n  @if $rfs-class == enable {\r\n    @if $rfs-mode == min-media-query {\r\n      @content;\r\n    }\r\n\r\n    @include _rfs-media-query {\r\n      .enable-rfs &,\r\n      &.enable-rfs {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n  @else {\r\n    @if $rfs-class == disable and $rfs-mode == min-media-query {\r\n      .disable-rfs &,\r\n      &.disable-rfs {\r\n        @content;\r\n      }\r\n    }\r\n    @include _rfs-media-query {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n// Helper function to get the formatted non-responsive value\r\n@function rfs-value($values) {\r\n  // Convert to list\r\n  $values: if(type-of($values) != list, ($values,), $values);\r\n\r\n  $val: '';\r\n\r\n  // Loop over each value and calculate value\r\n  @each $value in $values {\r\n    @if $value == 0 {\r\n      $val: $val + ' 0';\r\n    }\r\n    @else {\r\n      // Cache $value unit\r\n      $unit: if(type-of($value) == \"number\", unit($value), false);\r\n\r\n      @if $unit == px {\r\n        // Convert to rem if needed\r\n        $val: $val + ' ' + if($rfs-unit == rem, #{divide($value, $value * 0 + $rfs-rem-value)}rem, $value);\r\n      }\r\n      @else if $unit == rem {\r\n        // Convert to px if needed\r\n        $val: $val + ' ' + if($rfs-unit == px, #{divide($value, $value * 0 + 1) * $rfs-rem-value}px, $value);\r\n      }\r\n      @else {\r\n        // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\r\n        $val: $val + ' ' + $value;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Remove first space\r\n  @return unquote(str-slice($val, 2));\r\n}\r\n\r\n// Helper function to get the responsive value calculated by RFS\r\n@function rfs-fluid-value($values) {\r\n  // Convert to list\r\n  $values: if(type-of($values) != list, ($values,), $values);\r\n\r\n  $val: '';\r\n\r\n  // Loop over each value and calculate value\r\n  @each $value in $values {\r\n    @if $value == 0 {\r\n      $val: $val + ' 0';\r\n    }\r\n\r\n    @else {\r\n      // Cache $value unit\r\n      $unit: if(type-of($value) == \"number\", unit($value), false);\r\n\r\n      // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\r\n      @if not $unit or $unit != px and $unit != rem {\r\n        $val: $val + ' ' + $value;\r\n      }\r\n\r\n      @else {\r\n        // Remove unit from $value for calculations\r\n        $value: divide($value, $value * 0 + if($unit == px, 1, divide(1, $rfs-rem-value)));\r\n\r\n        // Only add the media query if the value is greater than the minimum value\r\n        @if abs($value) <= $rfs-base-value or not $enable-rfs {\r\n          $val: $val + ' ' +  if($rfs-unit == rem, #{divide($value, $rfs-rem-value)}rem, #{$value}px);\r\n        }\r\n        @else {\r\n          // Calculate the minimum value\r\n          $value-min: $rfs-base-value + divide(abs($value) - $rfs-base-value, $rfs-factor);\r\n\r\n          // Calculate difference between $value and the minimum value\r\n          $value-diff: abs($value) - $value-min;\r\n\r\n          // Base value formatting\r\n          $min-width: if($rfs-unit == rem, #{divide($value-min, $rfs-rem-value)}rem, #{$value-min}px);\r\n\r\n          // Use negative value if needed\r\n          $min-width: if($value < 0, -$min-width, $min-width);\r\n\r\n          // Use `vmin` if two-dimensional is enabled\r\n          $variable-unit: if($rfs-two-dimensional, vmin, vw);\r\n\r\n          // Calculate the variable width between 0 and $rfs-breakpoint\r\n          $variable-width: #{divide($value-diff * 100, $rfs-breakpoint)}#{$variable-unit};\r\n\r\n          // Return the calculated value\r\n          $val: $val + ' calc(' + $min-width + if($value < 0, ' - ', ' + ') + $variable-width + ')';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Remove first space\r\n  @return unquote(str-slice($val, 2));\r\n}\r\n\r\n// RFS mixin\r\n@mixin rfs($values, $property: font-size) {\r\n  @if $values != null {\r\n    $val: rfs-value($values);\r\n    $fluidVal: rfs-fluid-value($values);\r\n\r\n    // Do not print the media query if responsive & non-responsive values are the same\r\n    @if $val == $fluidVal {\r\n      #{$property}: $val;\r\n    }\r\n    @else {\r\n      @include _rfs-rule {\r\n        #{$property}: if($rfs-mode == max-media-query, $val, $fluidVal);\r\n\r\n        // Include safari iframe resize fix if needed\r\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\r\n      }\r\n\r\n      @include _rfs-media-query-rule {\r\n        #{$property}: if($rfs-mode == max-media-query, $fluidVal, $val);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Shorthand helper mixins\r\n@mixin font-size($value) {\r\n  @include rfs($value);\r\n}\r\n\r\n@mixin padding($value) {\r\n  @include rfs($value, padding);\r\n}\r\n\r\n@mixin padding-top($value) {\r\n  @include rfs($value, padding-top);\r\n}\r\n\r\n@mixin padding-right($value) {\r\n  @include rfs($value, padding-right);\r\n}\r\n\r\n@mixin padding-bottom($value) {\r\n  @include rfs($value, padding-bottom);\r\n}\r\n\r\n@mixin padding-left($value) {\r\n  @include rfs($value, padding-left);\r\n}\r\n\r\n@mixin margin($value) {\r\n  @include rfs($value, margin);\r\n}\r\n\r\n@mixin margin-top($value) {\r\n  @include rfs($value, margin-top);\r\n}\r\n\r\n@mixin margin-right($value) {\r\n  @include rfs($value, margin-right);\r\n}\r\n\r\n@mixin margin-bottom($value) {\r\n  @include rfs($value, margin-bottom);\r\n}\r\n\r\n@mixin margin-left($value) {\r\n  @include rfs($value, margin-left);\r\n}\r\n",".sign-up {\r\n    .sign-up--left {\r\n        padding-top: 48px;\r\n        background-color: $eerie-black;\r\n        max-width: 366px;\r\n        width: 100%;\r\n        min-height: 500px;\r\n        height: 100%;\r\n        padding-left: 38px;\r\n\r\n        &__img {\r\n            margin-bottom: 30px;\r\n            margin-left: 10px;\r\n\r\n            .attachment-full {}\r\n        }\r\n\r\n        &__content {\r\n            .nav-item {\r\n                .nav-link {\r\n                    @include font-size(18px);\r\n                    color: $slate-gray;\r\n                    display: flex;\r\n                }\r\n\r\n                .active {\r\n                    background-color: transparent;\r\n                    color: $white;\r\n\r\n                    .circle {\r\n                        border: 2px solid $white;\r\n\r\n                        .checkmark {}\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .sign-up--right {\r\n        padding: 120px 138px;\r\n\r\n        &__content {\r\n\r\n            .role-select {\r\n                .gform_body {\r\n                    .gform_checkfield {\r\n                        @include input();\r\n                        max-width: 661px;\r\n                        margin-bottom: 16px;\r\n                        padding: 20px;\r\n\r\n                        .gfield_radio {}\r\n\r\n                        .gfield_label {\r\n                            font-weight: 500;\r\n                        }\r\n                    }\r\n\r\n                    .gform_checkfield:checked {\r\n                        border-color: $persian-blue;\r\n                        background-color: $persian-blue;\r\n                        color: $white;\r\n                    }\r\n                }\r\n            }\r\n\r\n            .company-info {\r\n                .gform_body {\r\n                    .gfield {\r\n                        margin-bottom: 24px;\r\n\r\n                        .gfield_label {\r\n                            @include font-size(18px);\r\n                            font-weight: 600;\r\n                            color: $eigengrau;\r\n                            margin-bottom: 16px;\r\n                        }\r\n\r\n                        .gfield_input {\r\n                            outline: none;\r\n\r\n                            .input-long {\r\n                                @include input();\r\n                                max-width: 660px;\r\n                                margin-bottom: 10px;\r\n                                padding: 20px;\r\n                                color: $cool-gray;\r\n                            }\r\n\r\n                            .input-long:focus {\r\n                                outline: 1px solid $persian-blue;\r\n                            }\r\n\r\n                            .input-short {\r\n                                @include input();\r\n                                max-width: 318px;\r\n                                margin-bottom: 10px;\r\n                                padding: 20px;\r\n                                color: $cool-gray;\r\n                            }\r\n\r\n                            .input-short:focus {\r\n                                outline: 1px solid $persian-blue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    .gform_social {\r\n                        &__title {\r\n                            @include font-size(18px);\r\n                            font-weight: 600;\r\n                            color: $eigengrau;\r\n                            margin-bottom: 16px;\r\n                        }\r\n\r\n                        &__content {\r\n                            .gfield_label {\r\n                                font-weight: 500;\r\n                                margin-bottom: 8px;\r\n                            }\r\n\r\n                            .gfield_input {\r\n                                outline: none;\r\n\r\n                                .input-short {\r\n                                    @include input();\r\n                                    max-width: 318px;\r\n                                    margin-bottom: 10px;\r\n                                    padding: 20px;\r\n                                    color: $cool-gray;\r\n                                }\r\n\r\n                                .input-short:focus {\r\n                                    outline: 1px solid $persian-blue;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            .account-info {\r\n                .gform_body {\r\n                    .gfield {\r\n                        margin-bottom: 24px;\r\n\r\n                        .gfield_label {\r\n                            margin-bottom: 16px;\r\n                            @include font-size(18px);\r\n                            font-weight: 600;\r\n                        }\r\n\r\n                        .gfield_input {\r\n                            outline: none;\r\n                            @include input();\r\n                            max-width: 432px;\r\n                            padding: 20px;\r\n                            color: $cool-gray;\r\n                        }\r\n\r\n                        .gfield_input:focus {\r\n                            outline: 1px solid $persian-blue;\r\n                        }\r\n                    }\r\n\r\n                    .gfield_checkbox {\r\n                        &__desc {\r\n                            @include font-size(18px);\r\n                            font-weight: 500;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            .verify-email {\r\n                &__email {\r\n                    @include font-size(18px);\r\n                    font-weight: 600;\r\n                    color: $eigengrau;\r\n                }\r\n\r\n                &__content {\r\n                    .verify-email__message {\r\n                        @include font-size(18px);\r\n                        font-weight: 600;\r\n                    } \r\n\r\n                    .verify-email__link {\r\n                        @include font-size(18px);\r\n                        font-weight: 600;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        ::placeholder {\r\n            color: $cool-gray;\r\n        }\r\n\r\n        &__title {\r\n            margin-bottom: 16px;\r\n        }\r\n\r\n        &__subtitle {\r\n            margin-bottom: 40px;\r\n            @include font-size(18px);\r\n            color: $slate-gray;\r\n        }\r\n\r\n        .gform_bottom {\r\n            padding-top: 34px;\r\n\r\n            .gform_submit_button {\r\n                @include button();\r\n                max-width: 661px;\r\n                padding: 16px;\r\n                color: $white;\r\n                \r\n                .bi-arrow-right {\r\n                    margin-left: 8px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",".forgot-password {\r\n    .section__background {\r\n        .top-left {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n\r\n            img {}\r\n        }\r\n\r\n        .bottom-right {\r\n            position: absolute;\r\n            bottom: 0;\r\n            right: 0;\r\n\r\n            img {}\r\n        }\r\n    }\r\n\r\n    .container {\r\n        position: relative;\r\n        max-width: 432px;\r\n        width: 100%;\r\n\r\n        .section__content {\r\n            margin: 0;\r\n            position: absolute;\r\n            top: 50%;\r\n            transform: translateY(25%);\r\n\r\n            .forgot-password__logo {\r\n                margin-bottom: 32px;\r\n\r\n                img {}\r\n            }\r\n\r\n            .section__title {\r\n                margin-bottom: 16px;\r\n            }\r\n\r\n            .section__subtitle {\r\n                @include font-size(18px);\r\n                color: $slate-gray;\r\n                font-weight: 500;\r\n                margin-bottom: 32px;\r\n\r\n                .email {\r\n                    color: $eigengrau;\r\n                    font-weight: 600;\r\n                }\r\n            }\r\n\r\n            .forgot-password__form {\r\n\r\n                .gform_body {\r\n                    margin-bottom: 32px;\r\n\r\n                    .gfield {\r\n                        margin-bottom: 16px;\r\n                        .gfield_label {\r\n                            @include font-size(14px);\r\n                        }\r\n\r\n                        .gfield_input {\r\n                            outline: none;\r\n\r\n                            .input {\r\n                                @include input();\r\n                                max-width: 432px;\r\n                                padding: 16px;\r\n                                color: $eigengrau;\r\n                                font-weight: 500;\r\n                            }\r\n\r\n                            .input:focus {\r\n                                outline: 1px solid $persian-blue;\r\n                            }\r\n\r\n                            ::placeholder {\r\n                                color: $cool-gray;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                .gform_bottom {\r\n                    text-align: center;\r\n                    .gform_button {\r\n                        margin-bottom: 32px;\r\n                        .submit_button {\r\n                            @include button();\r\n                            max-width: 432px;\r\n                            padding: 16px;\r\n                            color: $white;\r\n                        }\r\n                    }\r\n\r\n                    .gform_link {\r\n                        font-weight: 500;\r\n                        color: $eigengrau;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"]}